ABOUT THIS DEMO
---------------

While some liberties were taken with this theme as it relates to responsiveness, every effort was made to remain faithful to the original PSD and create a pixel perfect representation. The custom theme was built from the ground up using the Omega 4 theme framework and the Singularity (SASS) responsive grid framework. While Omega 4 can be quite daunting at first, it has quickly become my go-to for building out custom responsive sites in Drupal due to it's insanely easy scaffolding and painless integrations with Bower, Bundler, Guard, and a plethora of other systems.

As stated above, this site is built using the Singularity grid framework, which is a brilliantly easy-to-use responsive framework built on top of SASS, and fully integrated into Omega 4. The compilation of all stylesheets and components is accomplished through the use of Ruby Bundler and Guard. It can be tricky to get these up and running at first, but the steps are fairly simple:

1. Navigate to the theme folder in terminal (/sites/all/themes/elevated_third_demo).
2. Switch to the preferred version of Ruby using RVM (>= 2.2.5).
3. Run 'bundle install' to install the required gems (sass, singularity, breakpoint, etc.)
4. Run 'bundle exec guard'. This will start watching all SASS files within the theme and will automatically compile them. Guard will also initiate LiveReload, allowing quick browswer reloads if you have the extension installed.

This site makes extensive use of both Views Content Panes and Panels Node Templates. By integrating Views and Node Templates, the developer is able to create extremely flexible layouts that can be displayed in an infinite number of ways, while also maintaining usablity for content editors, who may not have a large amount of technical Drupal knowledge. For the purpsoses of this demo, content has been split into one of two types: 'Basic Pages' and 'Events'. The basic page holds the primary nodes found in the main menu, while individual events are added and subsequently aggregated on the main events page. In addition, events that have already been added can be quickly and easily edited by using the contextual edit links that appear on hover. In keeping with best practices, Views is used to add aggregated fields, while the formatting is kept within Views templates--leaving all markup in version-controlled code and outside of the database. For the purposes of this demo, Views UI has been left enabled; however, it is typically disabled on production sites, opting instead to use the built-in import/export feature to move from dev to production.
